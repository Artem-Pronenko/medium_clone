import {useState, useEffect, useCallback} from 'react'
import firebase from 'firebase/app'

export default () => {
  const [isLoading, setIsLoading] = useState(false)
  const [response, setResponse] = useState(null)
  const [error, setError] = useState(null)
  const [options, setOptions] = useState({})

  const authentication = useCallback(options => {
    setOptions(options)
    setIsLoading(true)
  }, [])

  useEffect(() => {
    (async () => {
      if (!isLoading) return
      try {
        if (options.isLogin) {
          const newUser = await firebase.auth().signInWithEmailAndPassword(options.email, options.password)
          setResponse(newUser)
          console.log('signIn user')
          return
        }
        const newUser = await firebase.auth().createUserWithEmailAndPassword(options.email, options.password)
        await firebase.database().ref(`/users/${newUser.user.uid}/info`).set({username: options.username})
        setResponse(newUser)
        console.log('create user')
      } catch (e) {
        setError(e)
      } finally {
        setIsLoading(false)
      }
    })()
  }, [isLoading, options])

  return [{isLoading, response, error}, authentication]

}
