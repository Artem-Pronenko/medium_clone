import {useState, useEffect, useCallback} from 'react'
import firebase from 'firebase/app'

export default () => {
  const [isLoading, setIsLoading] = useState(false)
  const [response, setResponse] = useState(null)
  const [error, setError] = useState(null)
  const [options, setOptions] = useState({})

  const db = useCallback(options => {
    setOptions(options)
    setIsLoading(true)
  }, [])

  useEffect(() => {
    (async () => {
      if (!isLoading) return
      try {
        const res = await firebase.database().ref(`/userPosts`).get()
        const data = Object.values(res.val())
        setResponse(data)
      } catch (e) {
        setError(e)
      } finally {
        setIsLoading(false)
      }
    })()
  }, [isLoading, options])

  return [{isLoading, response, error}, db]

}
