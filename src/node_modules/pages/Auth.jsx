import React, {useEffect, useState, useContext} from 'react'
import {Link, Redirect} from 'react-router-dom'
import useAuth from 'hooks/useAuth'
import {CurrentUserContext} from 'contexts/currentUser'
import BackendErrorMessages from 'components/BackendErrorMessages'

const Auth = props => {
  const isLogin = props.match.path === '/login'
  const pageTitle = isLogin ? 'Sign In' : 'Sign Up'
  const descriptionLink = isLogin ? '/register' : '/login'
  const descriptionText = isLogin ? 'Need an account?' : 'Have an account?'

  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const [{isLoading, response, error}, authentication] = useAuth()
  const [username, setUsername] = useState('')
  const [isSuccessFullSubmit, setIsSuccessFullSubmit] = useState(false)
  const [, dispatch] = useContext(CurrentUserContext)

  const handlerSubmit = (e) => {
    e.preventDefault()
    authentication({isLogin, email, password, username})
  }

  useEffect(() => {
    if (!response) return
    setIsSuccessFullSubmit(true)
    dispatch({
      type: 'AUTHORIZED',
      payload: response.user
    })

  }, [response])

  if (isSuccessFullSubmit) {
    return <Redirect to={'/'}/>
  }

  return (
    <div className="auth-page">
      <div className="container page">
        <div className="row">
          <div className="col-md-6 offset-md-3 col-xs-12">
            <h1 className="text-xs-center">{pageTitle}</h1>
            <p className="text-xs-center">
              <Link to={descriptionLink}>{descriptionText}</Link>
            </p>
            <form onSubmit={handlerSubmit}>
              {error && <BackendErrorMessages backendErrors={error.message}/>}
              <fieldset>
                {!isLogin && (
                  <fieldset className="form-group">
                    <input
                      value={username}
                      onChange={e => setUsername(e.target.value)}
                      className="form-control form-control-lg"
                      type="text"
                      placeholder="Username"
                    />
                  </fieldset>
                )}
                <fieldset className="form-group">
                  <input
                    value={email}
                    onChange={e => setEmail(e.target.value)}
                    className="form-control form-control-lg"
                    type="email"
                    placeholder="Email"
                  />
                </fieldset>
                <fieldset className="form-group">
                  <input
                    value={password}
                    onChange={e => setPassword(e.target.value)}
                    className="form-control form-control-lg"
                    type="password"
                    placeholder="Password"
                  />
                </fieldset>
                <button
                  className="btn btn-lg btn-primary pull-xs-right"
                  type="submit"
                  disabled={isLoading}
                >
                  {pageTitle}
                </button>
              </fieldset>
            </form>
          </div>
        </div>
      </div>
    </div>
  )
}

export default Auth
