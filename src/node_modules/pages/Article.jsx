import React, {useEffect, useContext, useState} from 'react'
import {Link, Redirect} from 'react-router-dom'
import useFetch from 'hooks/useFetch'
import Loading from 'components/Loading'
import ErrorMessage from 'components/ErrorMessage'
import TagList from 'components/TagList'
import {CurrentUserContext} from 'contexts/currentUser'

const Article = ({match}) => {
  const slug = match.params.slug
  const apiUrl = `/articles/${slug}`
  const [{response: articleResponse, error: articleError, articleIsLoading}, doFetch] = useFetch(apiUrl)
  const [{response: deleteArticleResponse}, doDeleteArticle] = useFetch(apiUrl)
  const [currentUserState] = useContext(CurrentUserContext)
  const [isSuccessFullSubmit, setIsSuccessFullSubmit] = useState(false)

  const isAuthor = () => {
    if (!articleResponse || !currentUserState.isLoggedIn) return

    return articleResponse.article.author.username === currentUserState.currentUser.username

  }

  const deleteArticle = () => {
    doDeleteArticle({
      method: 'delete'
    })
  }

  useEffect(() => {
    doFetch(slug)
  }, [doFetch])

  useEffect(() => {
    if (!deleteArticleResponse) return
    setIsSuccessFullSubmit(true)
  }, [deleteArticleResponse])

  if (isSuccessFullSubmit) {
    return <Redirect to={'/'}/>
  }
  const {article} = articleResponse || {}

  return (
    <div className={'article-page'}>
      <div className="banner">
        {!articleIsLoading && articleResponse && (
          <div className={'container'}>
            <h1>{article.title}</h1>
            <div className={'article-meta'}>
              <Link to={`/profiles/${article.author.username}`}>
                <img src={article.author.image} alt=""/>
              </Link>
              <div className="info">
                <Link to={`/profiles/${article.author.username}`}>
                  {article.author.username}
                </Link>
                <span className="date">{article.createdAt}</span>
              </div>
              {isAuthor() && (
                <span>
                  <Link
                    className={'btn btn-outline-secondary btn-sm'}
                    to={`/articles/${article.slug}/edit`}
                  ><i className={'ion-edit'}/>
                  Edit Article
                  </Link>
                  <button
                    className={'btn btn-outline-danger btn-sm'}
                    onClick={deleteArticle}
                  >
                    <i className={'ion-trash-a'}/>
                    Delete article
                  </button>
                </span>
              )}
            </div>
          </div>
        )}
      </div>
      <div className="container page">
        {articleIsLoading && <Loading/>}
        {articleError && <ErrorMessage/>}
        {!articleIsLoading && articleResponse && (
          <div className={'row article-content'}>
            <div className="col-xs-12">
              <div>
                <p>{article.body}</p>
              </div>
              <TagList tags={article.tagList}/>
            </div>
          </div>
        )}
      </div>
    </div>
  )
}

export default Article
