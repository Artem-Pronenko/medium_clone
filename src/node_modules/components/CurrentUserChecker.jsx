import {useEffect, useContext} from 'react'
import useAuthChecker from 'hooks/useAuthChecker'
import {CurrentUserContext} from 'contexts/currentUser'
import useLocalStorage from 'hooks/useLocalStorage'

const CurrentUserChecker = ({children}) => {
  const [response] = useAuthChecker()
  const [, setCurrentUserState] = useContext(CurrentUserContext)
  const [user] = useLocalStorage('user')

  useEffect(() => {
    if (!user) {
      setCurrentUserState(state => ({
        ...state,
        isLoggedIn: false
      }))
      return
    }

    setCurrentUserState(state => ({
      ...state,
      isLoading: true
    }))
  }, [user, setCurrentUserState])

  useEffect(() => {
    if (!response) return

    setCurrentUserState(state => ({
      ...state,
      isLoggedIn: true,
      currentUser: response
    }))

  }, [response])

  return children
}

export default CurrentUserChecker
